from email.message import Message
from aiogram.types import message
from db import cursor, connect
import random
import time

async def bank_ograb_handler(message):
    u = message.text.split()[1]
    if u == '–±–∞–Ω–∫':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       
       x = random.randint(1,3)
       period = 86400 #86400 s 24h
       get = cursor.execute("SELECT stavka_bank FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = int(get[0])
       stavkatime = time.time() - float(last_stavka)
       rx = random.randint(1000000,25000000)
       rx2 = '{:,}'.format(rx)
       if stavkatime > period:
          if int(x) in range(2,3):
             await message.bot.send_message(message.chat.id, f"üè¶ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ –±–∞–Ω–∫ –Ω–∞ {rx2}$ ‚úÖ", parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance + rx} WHERE user_id ="{user_id}"')
             cursor.execute(f'UPDATE bot_time SET stavka_bank = {time.time()} WHERE user_id = "{user_id}"')
             connect.commit()
          else:
             await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫", parse_mode='html')
       else:
          await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 24—á‚è≥", parse_mode='html')


async def bank_down_handler(message: Message):
       msg = message
       chat_id = message.chat.id
       user_id = msg.from_user.id
       name = msg.from_user.last_name
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       bank_s = int(msg.text.split()[2])
       print(f"{name} —Å–Ω—è–ª —Å –±–∞–Ω–∫–∞: {bank_s}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
       bank = round(int(bank[0]))
       bank2 = '{:,}'.format(bank_s)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)

       if bank_s > 0:
          if bank >= bank_s:
             await message.bot.send_message(message.chat.id,
                                    f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ {bank2}$ {rwin}",
                                    parse_mode='html')
             cursor.execute(f'UPDATE users SET bank = {bank - bank_s} WHERE user_id = "{user_id}"')
             cursor.execute(f'UPDATE users SET balance = {balance + bank_s} WHERE user_id = "{user_id}"')
             connect.commit()

          elif int(bank) < int(bank_s):
             await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a>, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É! {rloser}",
                                    parse_mode='html')


async def bank_up_handler(message: Message):
       msg = message
       chat_id = message.chat.id
       user_id = msg.from_user.id
       name = msg.from_user.last_name
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       bank_p = int(msg.text.split()[2])

       if bank_p >= 999999999999999999999999999999999999999999999999999999999999999999:
          await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>,  –Ω–µ–ª—å–∑—è –ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞")
          return

       print(f"{name} –ø–æ–ª–æ–∂–∏–ª –≤ –±–∞–Ω–∫: {bank_p}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
       bank = round(int(bank[0]))
       bank2 = '{:,}'.format(bank_p)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       period = 180
       get = cursor.execute(f"SELECT stavka FROM time_bank WHERE user_id = {user_id}").fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if bank_p > 0:
             if balance >= bank_p:
                await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –±–∞–Ω–∫ {bank2}$ {rwin}",
                                        parse_mode='html')
                cursor.execute(f'UPDATE users SET balance = {balance - bank_p} WHERE user_id = "{user_id}"')
                cursor.execute(f'UPDATE users SET bank = {bank + bank_p} WHERE user_id = "{user_id}"')
                cursor.execute(f'UPDATE time_bank SET stavka = {time.time()} WHERE user_id = {user_id}')
                connect.commit()

             elif int(balance) < int(bank_p):
                await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}", parse_mode='html')

          if bank_p <= 0:
             await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–ª—å–∑—è –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}",
                                     parse_mode='html')
       else:
          await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 3 –º–∏–Ω—É—Ç—ã", parse_mode='html')


async def depozit_handler(message: Message):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       i = str(msg.text.split()[1])
       summ = int(msg.text.split()[2])
       summ2 = '{:,}'.format(summ)

       user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
       user_status = str(user_status[0])
       depozit = cursor.execute("SELECT depozit from users where user_id = ?", (message.from_user.id,)).fetchone()
       depozit = int(depozit[0])
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       
       period = 259200 #259200s 3d
       get = cursor.execute("SELECT stavka_depozit FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if i == '–ø–æ–ª–æ–∂–∏—Ç—å':
          if summ <= balance :
             if summ > 0:
                if stavkatime > period:
                   await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç {summ2}$ üîê", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ}  WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE users SET depozit = {depozit + summ}  WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE bot_time SET stavka_depozit = {time.time()}  WHERE user_id = {user_id}')
                   connect.commit()
                   return
                else:
                   await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –∏–∑–≤–∏–Ω–∏—Ç–µ –Ω–æ –ª–æ–∂–∏—Ç—å, —Å–Ω–∏–º–∞—Ç—å —Å –¥–µ–ø–æ–∑–∏—Ç–∞ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 3 –¥–Ω—è ‚åõÔ∏è", parse_mode='html')
             else:
                await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–ª—å–∑—è –ª–æ–∂–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ {rloser}", parse_mode='html')
          else:
             await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ {rloser}", parse_mode='html')
       if i == '—Å–Ω—è—Ç—å':
          if summ <= depozit :
             if summ > 0:
                if stavkatime > period:
                   await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–∞ {summ2}$ üîê", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance + summ}  WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE users SET depozit = {depozit - summ}  WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE bot_time SET stavka_depozit = {time.time()}  WHERE user_id = {user_id}')
                   connect.commit()
                   return
                else:
                   await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –∏–∑–≤–∏–Ω–∏—Ç–µ –Ω–æ –ª–æ–∂–∏—Ç—å, —Å–Ω–∏–º–∞—Ç—å —Å –¥–µ–ø–æ–∑–∏—Ç–∞ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 3 –¥–Ω—è ‚åõÔ∏è", parse_mode='html')
             else:
                await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–ª—å–∑—è —Å–Ω–∏–º–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ {rloser}", parse_mode='html')
          else:
             await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ {rloser}", parse_mode='html')
          


async def procent_handler(message: Message):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       i2 = str(msg.text.split()[1])
       summ = int(msg.text.split()[2])
       summ2 = '{:,}'.format(summ)

       user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
       user_status = str(user_status[0])
       depozit = cursor.execute("SELECT depozit from users where user_id = ?", (message.from_user.id,)).fetchone()
       depozit = int(depozit[0])
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       if user_status == 'Player':
          procent = '6%'
          i = 6
          stats_depozit = '–û–±—ã—á–Ω—ã–π'
       if user_status == 'Vip':
          procent = '9%'
          i = 9
          stats_depozit = '–í–∏–ø'
       if user_status == 'Premium':
          procent = '13%'
          i = 13
          stats_depozit = '–ü—Ä–µ–º–∏—É–º'
       if user_status == 'Platina':
          procent = '17%'
          i = 17
          stats_depozit = '–ü–ª–∞—Ç–∏–Ω–∞'
       if user_status == 'Helper':
          procent = '21%'
          i = 21
          stats_depozit = '–•–µ–ª–ø–µ—Ä'
       if user_status == 'Sponsor':
          procent = '24%'
          i = 24
          stats_depozit = '–°–ø–æ–Ω—Å–æ—Ä'
       if user_status == 'Osnovatel':
          procent = '27%'
          i = 27
          stats_depozit = '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å'
       if user_status == 'Vladelec':
          procent = '29%'
          i = 29
          stats_depozit = '–í–ª–∞–¥–µ–ª–µ—Ü'
       if user_status == 'Bog':
          procent = '32%'
          i = 32
          stats_depozit = '–ë–æ–≥'
       if user_status == 'Vlaselin':
          procent = '36%'
          i = 36
          stats_depozit = '–í–ª–∞—Å—Ç–µ–ª–∏–Ω'

       else:
          procent = '6%'
          i = 6
          stats_depozit = '–û–±—ã—á–Ω—ã–π'
          
          money_vivod = depozit / i
          money_vivod2 = int(money_vivod)
          money_vivod3 = '{:,}'.format(money_vivod2)
       period = 259200 #259200s 3d
       get = cursor.execute("SELECT stavka_depozit FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if i2 == '—Å–Ω—è—Ç—å':
          if summ <= money_vivod2 :
             if summ > 0:
                if stavkatime > period:
                   await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã —Å –¥–µ–ø–æ–∑–∏—Ç–∞ {summ2}$ üíµ", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance + summ}  WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE bot_time SET stavka_depozit = {time.time()}  WHERE user_id = {user_id}')
                   connect.commit()
                   return
                else:
                   await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –∏–∑–≤–∏–Ω–∏—Ç–µ –Ω–æ —Å–Ω–∏–º–∞—Ç—å —Å –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–µ–ø–æ–∑–∏—Ç–∞ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 3 –¥–Ω—è ‚åõÔ∏è", parse_mode='html')
             else:
                await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–ª—å–∑—è —Å–Ω–∏–º–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ {rloser}", parse_mode='html')
          else:
             await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ {rloser}", parse_mode='html')


async def bank_handler(message: Message):
    try:
        msg = message
        chat_id = message.chat.id
        
        user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
        user_name = str(user_name[0])

        user_id = msg.from_user.id
        user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
        bank = cursor.execute("SELECT bank from users where user_id = ?",(message.from_user.id,)).fetchone()
        bank_hran = cursor.execute("SELECT bank2 from users where user_id = ?",(message.from_user.id,)).fetchone()
        bank = int(bank[0])
        balance = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
        balance = int(balance[0])
        depozit = cursor.execute("SELECT depozit from users where user_id = ?",(message.from_user.id,)).fetchone()
        depozit = int(depozit[0])
        bank_hran = int(bank_hran[0])
        bank_hran2 = '{:,}'.format(bank_hran)
        bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
        bank = int(bank[0])
        depozit2 = '{:,}'.format(depozit)
        bank2 = '{:,}'.format(bank)
        if user_status == 'Player':
            procent = '6%'
            i = 6
            stats_depozit = '–û–±—ã—á–Ω—ã–π'
        if user_status == 'Vip':
            procent = '9%'
            i = 9
            stats_depozit = '–í–∏–ø'
        if user_status == 'Premium':
            procent = '13%'
            i = 13
            stats_depozit = '–ü—Ä–µ–º–∏—É–º'
        if user_status == 'Platina':
            procent = '17%'
            i = 17
            stats_depozit = '–ü–ª–∞—Ç–∏–Ω–∞'
        if user_status == 'Helper':
            procent = '21%'
            i = 21
            stats_depozit = '–•–µ–ª–ø–µ—Ä'
        if user_status == 'Sponsor':
            procent = '24%'
            i = 24
            stats_depozit = '–°–ø–æ–Ω—Å–æ—Ä'
        if user_status == 'Osnovatel':
            procent = '27%'
            i = 27
            stats_depozit = '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å'
        if user_status == 'Vladelec':
            procent = '29%'
            i = 29
            stats_depozit = '–í–ª–∞–¥–µ–ª–µ—Ü'
        if user_status == 'Bog':
            procent = '32%'
            i = 32
            stats_depozit = '–ë–æ–≥'
        if user_status == 'Vlaselin':
            procent = '36%'
            i = 36
            stats_depozit = '–í–ª–∞—Å—Ç–µ–ª–∏–Ω'

        else:
            procent = '6%'
            i = 6
            stats_depozit = '–û–±—ã—á–Ω—ã–π'
            
            money_vivod = depozit / i
            money_vivod2 = int(money_vivod)
            money_vivod3 = '{:,}'.format(money_vivod2)

        c = 999999999999999999999999999999999999999999999999999999999999999999
        if bank >= 999999999999999999999999999999999999999999999999999999999999999999:
            bank = 999999999999999999999999999999999999999999999999999999999999999999
            cursor.execute(f'UPDATE users SET bank = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
            connect.commit()
            bank2 = '{:,}'.format(bank)
        else:
            pass
        if bank_hran >= 999999999999999999999999999999999999999999999999999999999999999999:
            bank_hran = 999999999999999999999999999999999999999999999999999999999999999999
            cursor.execute(f'UPDATE users SET bank2 = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
            connect.commit()
            bank_hran2 = '{:,}'.format(bank_hran)
        else:
            pass
        if depozit >= 999999999999999999999999999999999999999999999999999999999999999999:
            depozit = 999999999999999999999999999999999999999999999999999999999999999999
            cursor.execute(f'UPDATE users SET depozit = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
            connect.commit()
            depozit2 = '{:,}'.format(depozit)

        i = str(msg.text.split()[1])
        summ = int(msg.text.split()[2])


        if i in ['—Å–Ω—è—Ç—å', "–°–Ω—è—Ç—å"]:
            win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
            rwin = random.choice(win)
            loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
            rloser = random.choice(loser)
            bank2 = '{:,}'.format(summ)

            if summ > 0:
                if bank >= summ:
                    await message.bot.send_message(message.chat.id,
                                            f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ {bank2}$ {rwin}",
                                            parse_mode='html')
                    cursor.execute(f'UPDATE users SET bank = {bank - summ} WHERE user_id = "{user_id}"')
                    cursor.execute(f'UPDATE users SET balance = {balance + summ} WHERE user_id = "{user_id}"')
                    connect.commit()

                elif int(bank) < int(bank_s):
                    await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a>, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É! {rloser}",
                                            parse_mode='html')


        if i in ['–ü–æ–ª–æ–∂–∏—Ç—å', "–ø–æ–ª–æ–∂–∏—Ç—å"]:
            win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
            rwin = random.choice(win)
            loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
            rloser = random.choice(loser)
            period = 180
            bank2 = '{:,}'.format(summ)
            get = cursor.execute(f"SELECT stavka FROM time_bank WHERE user_id = {user_id}").fetchone()
            last_stavka = f"{int(get[0])}"
            stavkatime = time.time() - float(last_stavka)
            if stavkatime > period:
                if summ > 0:
                    if balance >= summ:
                        await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –±–∞–Ω–∫ {bank2}$ {rwin}",
                                                parse_mode='html')
                        cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE users SET bank = {bank + summ} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE time_bank SET stavka = {time.time()} WHERE user_id = {user_id}')
                        connect.commit()

                    elif int(balance) < int(summ):
                        await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}", parse_mode='html')

                if summ <= 0:
                    await message.bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a> , –Ω–µ–ª—å–∑—è –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}",
                                            parse_mode='html')
            else:
                await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 3 –º–∏–Ω—É—Ç—ã", parse_mode='html')
    except IndexError:
        await message.bot.send_message(message.chat.id,f"<a href='tg://user?id={user_id}'>{user_name}</a> , –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∞—à–µ–º –±–∞–Ω–∫–µ üè¶\n\nüë®‚Äçüíº | –í–ª–∞–¥–µ–ª–µ—Ü: {user_name}\nüèõ | –û—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç: {bank2}$\nüíº | –•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç: {bank_hran2}$\nüîê | –î–µ–Ω—å–≥–∏ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–µ: {depozit2}$\n     üíé –°—Ç–∞—Ç—É—Å –¥–µ–ø–æ–∑–∏—Ç–∞: {stats_depozit}\n     üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–¥ –¥–µ–ø–æ–∑–∏—Ç: {procent}\n      üíµ –î–µ–Ω—å–≥–∏ –Ω–∞ –≤—ã–≤–æ–¥: {money_vivod3}$", parse_mode='html')
